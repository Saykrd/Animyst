{"version":3,"sources":["app.min.js","Game.ts","Main.ts"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","App","Game","_super","call","setup","console","log","viewport","Animyst","View3D","init","resize","debugControls","append","Scene3D","addAxis","cameras","name","type","x","y","z","fov","aspect","near","far","main","width","height","left","right","top","bottom","lookAtScene","base","get","ui","texture0","THREE","CanvasTexture","DataLoad","getAsset","texture1","smatr0","SpriteMaterial","map","color","smatr1","spriteBase","Sprite","spriteUI","twidth","material","image","theight","scale","set","position","scene","add","frameUpdate","delta","framecount","render","AppState","Main","_this","initSignal","addOnce","onInit","bootSignal","onBoot","Log","output","game","run","Application"],"mappings":"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","file":"app.min.js","sourcesContent":["var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar App;\n(function (App) {\n    var Game = (function (_super) {\n        __extends(Game, _super);\n        function Game() {\n            return _super.call(this, \"game\") || this;\n            // code...\n        }\n        Game.prototype.setup = function () {\n            console.log(\"Setting up game\");\n            this.viewport = new Animyst.View3D();\n            this.viewport.init({ resize: true, debugControls: true });\n            this.viewport.append();\n            this.viewport.create(Animyst.Scene3D, 'base', {\n                addAxis: true,\n                debugControls: true,\n                cameras: [\n                    { name: \"camera0\", type: \"perspective\", x: 500, y: 500, z: 500, fov: 50, aspect: this.viewport.aspect, near: 0.1, far: 2000, main: true }\n                ]\n            });\n            this.viewport.create(Animyst.Scene3D, 'ui', {\n                addAxis: true,\n                debugControls: false,\n                cameras: [\n                    {\n                        name: \"camera0\", type: \"orthographic\",\n                        x: this.viewport.width / 2, y: -this.viewport.height / 2, z: 10,\n                        left: -this.viewport.width / 2, right: this.viewport.width / 2,\n                        top: this.viewport.height / 2, bottom: -this.viewport.height / 2,\n                        near: 1, far: 2000, main: true, lookAtScene: false\n                    }\n                ]\n            });\n            var base = this.viewport.get('base');\n            var ui = this.viewport.get('ui');\n            var texture0 = new THREE.CanvasTexture(Animyst.DataLoad.getAsset(\"redball1\"));\n            var texture1 = new THREE.CanvasTexture(Animyst.DataLoad.getAsset(\"greenball2\"));\n            var smatr0 = new THREE.SpriteMaterial({ map: texture0, color: 0xffffff });\n            var smatr1 = new THREE.SpriteMaterial({ map: texture1, color: 0xffffff });\n            var spriteBase = new THREE.Sprite(smatr1);\n            var spriteUI = new THREE.Sprite(smatr0);\n            var twidth = spriteUI.material.map.image.width;\n            var theight = spriteUI.material.map.image.height;\n            console.log(twidth, theight, this.viewport.width, this.viewport.height);\n            spriteUI.scale.set(twidth, theight, 1);\n            spriteUI.position.set(178, -178, 0);\n            spriteBase.position.set(100, 100, 100);\n            spriteBase.scale.set(twidth / 2, theight / 2, 1);\n            base.scene.add(spriteBase);\n            ui.scene.add(spriteUI);\n        };\n        Game.prototype.frameUpdate = function (delta, framecount) {\n            _super.prototype.frameUpdate.call(this, delta, framecount);\n            if (this.viewport)\n                this.viewport.render();\n        };\n        return Game;\n    }(Animyst.AppState));\n    App.Game = Game;\n})(App || (App = {}));\nvar App;\n(function (App) {\n    var Main = (function (_super) {\n        __extends(Main, _super);\n        function Main() {\n            var _this = _super.call(this) || this;\n            _this.initSignal.addOnce(_this.onInit, _this);\n            _this.bootSignal.addOnce(_this.onBoot, _this);\n            return _this;\n        }\n        Main.prototype.onBoot = function () {\n            Animyst.Log.output(\"App Booted!\");\n        };\n        Main.prototype.onInit = function () {\n            Animyst.Log.output(\"App Initialized!\");\n            var game = new App.Game();\n            this.run(game);\n        };\n        return Main;\n    }(Animyst.Application));\n    App.Main = Main;\n})(App || (App = {}));\n","module App {\n\texport class Game extends Animyst.AppState {\n\t\t\n\n\t\tpublic viewport:Animyst.View3D;\n\n\t\tconstructor() {\n\t\t\tsuper(\"game\");\n\t\t\t// code...\n\t\t}\n\n\n\t\tpublic setup():void{\n\t\t\tconsole.log(\"Setting up game\");\n\n\t\t\tthis.viewport = new Animyst.View3D();\n\t\t\tthis.viewport.init({resize : true, debugControls : true});\n\t\t\tthis.viewport.append();\n\n\n\t\t\tthis.viewport.create(Animyst.Scene3D, 'base', {\n\t\t\t\taddAxis : true,\n\t\t\t\tdebugControls: true,\n\t\t\t\tcameras : [\n\t\t\t\t\t{name:\"camera0\", type:\"perspective\", x: 500, y:500, z:500, fov:50, aspect: this.viewport.aspect, near: 0.1, far: 2000, main:true}\n\t\t\t\t]\n\t\t\t});\n\n\t\t\tthis.viewport.create(Animyst.Scene3D, 'ui', {\n\t\t\t\taddAxis : true,\n\t\t\t\tdebugControls: false,\n\t\t\t\tcameras : [\n\t\t\t\t\t{\t\n\t\t\t\t\t\tname:\"camera0\", type:\"orthographic\", \n\t\t\t\t\t\tx:this.viewport.width/2, y:-this.viewport.height/2, z:10, \n\t\t\t\t\t\tleft : - this.viewport.width / 2, right: this.viewport.width / 2, \n\t\t\t\t\t\ttop: this.viewport.height / 2, bottom: -this.viewport.height / 2,\n\t\t\t\t\t \tnear: 1, far: 2000, main:true, lookAtScene:false\n\t\t\t\t\t }\n\t\t\t\t]\n\t\t\t});\n\n\t\t\tvar base:Animyst.Scene3D = <Animyst.Scene3D> this.viewport.get('base');\n\t\t\tvar ui:Animyst.Scene3D   = <Animyst.Scene3D> this.viewport.get('ui');\n\n\t\t\tvar texture0:THREE.CanvasTexture = new THREE.CanvasTexture(Animyst.DataLoad.getAsset(\"redball1\"));\n\t\t\tvar texture1:THREE.CanvasTexture = new THREE.CanvasTexture(Animyst.DataLoad.getAsset(\"greenball2\"));\n\n\t\t\tvar smatr0:THREE.SpriteMaterial = new THREE.SpriteMaterial({map: texture0, color: 0xffffff});\n\t\t\tvar smatr1:THREE.SpriteMaterial = new THREE.SpriteMaterial({map: texture1, color: 0xffffff});\n\n\t\t\tvar spriteBase:THREE.Sprite = new THREE.Sprite(smatr1);\n\t\t\tvar spriteUI:THREE.Sprite = new THREE.Sprite(smatr0);\n\n\n\n\t\t\tvar twidth = spriteUI.material.map.image.width;\n\t\t\tvar theight = spriteUI.material.map.image.height;\n\n\t\t\tconsole.log(twidth, theight, this.viewport.width, this.viewport.height);\n\n\t\t\t\n\t\t\tspriteUI.scale.set(twidth, theight, 1);\n\t\t\tspriteUI.position.set(178, -178, 0);\n\n\t\t\tspriteBase.position.set(100, 100, 100);\n\t\t\tspriteBase.scale.set(twidth / 2, theight / 2, 1);\n\n\n\t\t\tbase.scene.add(spriteBase);\n\t\t\tui.scene.add(spriteUI);\n\t\t}\n\n\t\tpublic frameUpdate(delta:number, framecount:number):void{\n\t\t\tsuper.frameUpdate(delta, framecount);\n\t\t\tif(this.viewport) this.viewport.render();\n\t\t}\n\t}\n}","module App {\n\texport class Main extends Animyst.Application{\n\t\t\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.initSignal.addOnce(this.onInit, this);\n\t\t\tthis.bootSignal.addOnce(this.onBoot, this);\n\n\t\t}\n\n\t\tpublic onBoot():void{\n\t\t\tAnimyst.Log.output(\"App Booted!\");\n\t\t}\n\n\t\tpublic onInit():void{\n\t\t\tAnimyst.Log.output(\"App Initialized!\");\n\n\t\t\tvar game:Game = new Game();\n\t\t\tthis.run(game);\n\t\t}\n\n\t}\n}"],"sourceRoot":"./src"}