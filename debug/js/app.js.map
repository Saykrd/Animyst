{"version":3,"sources":["app.js","node_modules/browserify/node_modules/browser-pack/_prelude.js","src/_tests/game.js","src/_tests/gamedata.js","src/_tests/gamedisplay.js","src/_tests/gamelogic.js","src/_tests/index.js","src/_tests/main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","Game","id","Animyst","AppState","this","inputData","gameData","viewport","prototype","Object","create","setup","console","log","appScope","getDatabase","CoreProcess","INPUT","scene","THREE","Scene","View3D","Window","width","height","initDisplay","resize","debugControls","addAxis","append","start","update","delta","time","render","pause","resume","kill","restart",2,"GameData","Database","entities","_total","entityCreationCount","addedSignal","signals","Signal","removedSignal","updateSignal","PLAYER","ENTITY_ADDED","ENTITY_REMOVED","ENTITY_UPDATED","clear","destroy","addEntity","type","params","count","entity","k","signal","dispatch","getEntity","list","entityID","removeEntity","data","notifyUpdate",3,"GameDisplay","System","layer","graphics","graphicProperties","ENEMY","ENEMY01","startup","add","entityHandler","Layer","position","Point","shutdown","graphic","createGraphic","clone","addChild","getGraphicByID","x","y","remove","prop","Shape","Circle","radius","fillColor",4,"GameLogic","screenDimensions","commands","up","down","left","right","fire","bomb","focus","player","vector","neutralSpeed","focusSpeed","updateCommands","updatePlayer","isKeyDown","speed",5,"global","Main","self","window","./game.js","./gamedata.js","./gamedisplay.js","./gamelogic.js","./main.js",6,"game","app","Application","initSignal","addOnce","onAppInit","run"],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar Game = function(id){\n\tAnimyst.AppState.call(this, id);\n\n\tthis.inputData = null;\n\tthis.gameData  = null;\n\tthis.viewport = null;\n}\n\nmodule.exports = Game;\nGame.prototype = Object.create(Animyst.AppState.prototype);\nGame.prototype.setup = function(){\n\tconsole.log(\"[Game] Setting Up...\");\n\tAnimyst.AppState.prototype.setup.call(this);\n\n\tthis.inputData = this.appScope.getDatabase(Animyst.CoreProcess.INPUT);\n\t\n\tvar scene = new THREE.Scene();\n\tthis.viewport = new Animyst.View3D(scene, Animyst.Window.width, Animyst.Window.height);\n\tthis.viewport.initDisplay({resize : true, debugControls : true, addAxis : true});\n\tthis.viewport.append();\n\t//this.gameData = new GameData();\n\n\t//var gameLogic   = new GameLogic(this.gameData, this.inputData);\n\t//var gameDisplay = new GameDisplay(this.gameData);\n\n\n\n\t\n\t//gameDisplay.startup({layer: this.appScope.getDatabase(Animyst.CoreProcess.PAPER_DISPLAY).getLayer(1)});\n\t//gameLogic.startup();\n\n\t//var threeDisplay = this.appScope.getDatabase(Animyst.CoreProcess.THREE_DISPLAY);\n\t//var sideScrollerWorld3d = new Animyst.SideScrollerWorld3D(threeDisplay);\n\n\t//sideScrollerWorld3d.startup({})\n\n\t//this.addSystem(\"world\", sideScrollerWorld3d);\n\n\t//this.addSystem(\"gameLogic\", gameLogic);\n\t//this.addSystem(\"gameDisplay\", gameDisplay)\n\t//this.addSystem(\"sound\", sound);\n\n}\n\nGame.prototype.start = function(){\n\tconsole.log(\"[Game] Start\");\n\tAnimyst.AppState.prototype.start.call(this);\n}\n\nGame.prototype.update = function(delta, time){\n\t//console.log(\"[Game] Updating...\", delta, time)\n\tAnimyst.AppState.prototype.update.call(this, delta, time);\n\n\tthis.viewport.render();\n}\n\nGame.prototype.pause = function(){\n\tAnimyst.AppState.prototype.pause.call(this);\n}\n\nGame.prototype.resume = function(){\n\tAnimyst.AppState.prototype.resume.call(this);\n}\n\nGame.prototype.kill = function(){\n\tAnimyst.AppState.prototype.kill.call(this);\n}\n\nGame.prototype.restart = function(){\n\tAnimyst.AppState.prototype.restart.call(this);\n}\n\n},{}],2:[function(require,module,exports){\nvar GameData = function () {\r\n\tAnimyst.Database.call(this);\r\n\r\n\tthis.entities            = {};\r\n\tthis.entities._total     = 0;\r\n\tthis.entityCreationCount = 0;\r\n\r\n\tthis.addedSignal   = new signals.Signal();\r\n\tthis.removedSignal = new signals.Signal();\r\n\tthis.updateSignal  = new signals.Signal();\r\n}\r\n\r\nmodule.exports = GameData;\r\n\r\nGameData.PLAYER = 0;\r\n\r\n\r\nGameData.ENTITY_ADDED   = 0; // Passes Entity\r\nGameData.ENTITY_REMOVED = 1; // Passes Removed Entity Data\r\nGameData.ENTITY_UPDATED = 2; // Passes Entity\r\n\r\nGameData.prototype = Object.create(Animyst.Database.prototype);\r\nGameData.prototype.clear = function(){\r\n\r\n\r\n\tAnimyst.Database.prototype.clear.call(this);\r\n}\r\n\r\nGameData.prototype.destroy = function(){\r\n\tthis.entities = null;\r\n\r\n\tAnimyst.Database.prototype.destroy.call(this);\r\n}\r\n\r\nGameData.prototype.addEntity = function(type, id, params){\r\n\tif(!this.entities[type]){\r\n\t\tthis.entities[type]       = {};\r\n\t\tthis.entities[type].count = 0;\r\n\t}\r\n\r\n\tvar entity = {};\r\n\r\n\tentity.id   = id || type + \"_\" + this.entities[type].count;\r\n\tentity.type = type;\r\n\r\n\tif(params){\r\n\t\tfor(var k in params){\r\n\t\t\tentity[k] = params[k];\r\n\t\t}\r\n\t}\r\n\r\n\tthis.entities[type][entity.id] = entity;\r\n\tthis.entities[type].count++;\r\n\r\n\tthis.entities._total++;\r\n\r\n\tthis.signal.dispatch(GameData.ENTITY_ADDED, entity);\r\n\tthis.addedSignal.dispatch(entity);\r\n\r\n\treturn entity\r\n\r\n}\r\n\r\n\r\nGameData.prototype.getEntity = function(id, type){\r\n\tif(!type){\r\n\t\tfor(var k in this.entities){\r\n\t\t\tvar list = this.entities[k];\r\n\t\t\tfor(var entityID in list){\r\n\t\t\t\tif(id == entityID){\r\n\t\t\t\t\ttype = k;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(type) break;\r\n\t\t}\r\n\t}\r\n\r\n\tif(!type || !this.entities[type][id])return;\r\n\r\n\treturn this.entities[type][id];\r\n}\r\n\r\nGameData.prototype.removeEntity = function(id, type){\r\n\tif(!type){\r\n\t\tfor(var k in this.entities){\r\n\t\t\tvar list = this.entities[k];\r\n\t\t\tfor(var entityID in list){\r\n\t\t\t\tif(id == entityID){\r\n\t\t\t\t\ttype = k;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(type) break;\r\n\t\t}\r\n\t}\r\n\r\n\tif(!type || !this.entities[type][id])return;\r\n\r\n\tthis.entities[type][id] = null;\r\n\tthis.entities[type].count--;\r\n\tthis.entities._total--\r\n\r\n\tdelete this.entities[type][id];\r\n\r\n\tvar data = {id:id, type:type}\r\n\tthis.signal.dispatch(GameData.ENTITY_REMOVED, data);\r\n\tthis.removedSignal.dispatch(data);\r\n}\r\n\r\n\r\nGameData.prototype.notifyUpdate = function(id, type){\r\n\tvar entity = this.getEntity(id, type);\r\n\tif(entity){\r\n\t\tthis.signal.dispatch(GameData.ENTITY_UPDATED, entity);\r\n\t\tthis.updateSignal.dispatch(entity)\r\n\t}\r\n}\n},{}],3:[function(require,module,exports){\nvar GameDisplay = function(gameData){\r\n\tAnimyst.System.call(this);\r\n\r\n\tthis.gameData = gameData;\r\n\tthis.layer    = null;\r\n\tthis.graphics = {};\r\n\r\n\tthis.graphicProperties = {}\r\n\tthis.graphicProperties[GameDisplay.PLAYER] = {}\r\n\tthis.graphicProperties[GameDisplay.ENEMY]  = {}\r\n}\r\n\r\nmodule.exports = GameDisplay;\r\n\r\nGameDisplay.PLAYER  = 0;\r\nGameDisplay.ENEMY01 = 1;\r\n\r\n\r\nGameDisplay.prototype = Object.create(Animyst.System.prototype);\r\nGameDisplay.prototype.startup = function(params){\r\n\r\n\tthis.gameData.signal.add(this.entityHandler, this);\r\n\r\n\tthis.layer = params.layer || new Layer({position: new Point()});\r\n\t\r\n\tAnimyst.System.prototype.startup.call(this, params);\r\n}\r\n\r\nGameDisplay.prototype.shutdown = function(){\r\n\tAnimyst.System.prototype.shutdown.call(this);\r\n}\r\n\r\nGameDisplay.prototype.update = function(delta, time){\r\n\tAnimyst.System.prototype.update.call(this);\r\n}\r\n\r\nGameDisplay.prototype.entityHandler = function(type, data){\r\n\tswitch(type){\r\n\t\tcase GameData.ENTITY_ADDED:\r\n\t\t\tvar graphic = this.createGraphic(this.graphicProperties[data.graphic]);\r\n\r\n\t\t\tgraphic.position = data.position.clone();\r\n\r\n\t\t\tthis.layer.addChild(graphic);\r\n\r\n\t\t\tthis.graphics[data.id] = graphic;\r\n\t\t\tbreak;\r\n\t\tcase GameData.ENTITY_UPDATED:\r\n\r\n\t\t\tvar graphic = this.getGraphicByID(data.id);\r\n\t\t\t\r\n\t\t\tgraphic.position.x = data.position.x;\r\n\t\t\tgraphic.position.y = data.position.y;\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase GameData.ENTITY_REMOVED:\r\n\t\t\tvar graphic = this.getGraphicByID(data.id);\r\n\r\n\t\t\tgraphic.remove();\r\n\t\t\tthis.graphics[data.id] = null;\r\n\t\t\tdelete this.graphics[data.id];\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nGameDisplay.prototype.createGraphic = function(prop){\r\n\treturn new Shape.Circle({radius:20, fillColor:\"#00FFFF\"});\r\n}\r\n\r\nGameDisplay.prototype.getGraphicByID = function(id){\r\n\treturn this.graphics[id];\r\n}\n},{}],4:[function(require,module,exports){\nvar GameLogic = function (gameData, inputData){\r\n\tAnimyst.System.call(this);\r\n\r\n\tthis.gameData  = gameData;\r\n\tthis.inputData = inputData;\r\n\tthis.screenDimensions = new Point();\r\n\r\n\tthis.commands = {\r\n\t\t\"up\"    : false,\r\n\t\t\"down\"  : false,\r\n\t\t\"left\"  : false,\r\n\t\t\"right\" : false,\r\n\t\t\"fire\"  : false,\r\n\t\t\"bomb\"  : false,\r\n\t\t\"focus\" : false\r\n\t}\r\n}\r\n\r\nmodule.exports = GameLogic;\r\nGameLogic.prototype = Object.create(Animyst.System.prototype);\r\nGameLogic.prototype.startup = function(params){\r\n\r\n\tAnimyst.System.prototype.startup.call(this);\r\n\r\n\tthis.screenDimensions.x = Animyst.Window.width;\r\n\tthis.screenDimensions.y = Animyst.Window.height;\r\n\r\n\tvar player = this.gameData.addEntity(GameData.PLAYER, \"player\", {\r\n\t\tvector:       new Point(), \r\n\t\tposition:     new Point(),\r\n\t\tneutralSpeed: new Point(10, 10),\r\n\t\tfocusSpeed:   new Point( 5,  5),\r\n\t\tfocus:        false,\r\n\r\n\t\tgraphic:      GameDisplay.PLAYER\r\n\t});\r\n\r\n\tplayer.position.x = this.screenDimensions.x / 2;\r\n\tplayer.position.y = this.screenDimensions.y / 2;\r\n\r\n\tconsole.log(this.screenDimensions);\r\n\tthis.gameData.notifyUpdate(\"player\", GameData.PLAYER);\r\n\r\n\tAnimyst.System.prototype.startup.call(this, params);\r\n}\r\n\r\nGameLogic.prototype.shutdown = function(){\r\n\r\n\tAnimyst.System.prototype.shutdown.call(this);\r\n}\r\n\r\nGameLogic.prototype.update = function(delta, time){\r\n\tthis.updateCommands();\r\n\tthis.updatePlayer();\r\n\r\n\tAnimyst.System.prototype.update.call(this);\r\n}\r\n\r\nGameLogic.prototype.updateCommands = function(){\r\n\r\n\tthis.commands.up    = this.inputData.isKeyDown(\"up\");\r\n\tthis.commands.down  = this.inputData.isKeyDown(\"down\");\r\n\tthis.commands.left  = this.inputData.isKeyDown(\"left\");\r\n\tthis.commands.right = this.inputData.isKeyDown(\"right\");\r\n\tthis.commands.fire  = this.inputData.isKeyDown(\"z\");\r\n\tthis.commands.focus = this.inputData.isKeyDown(\"shift\");\r\n}\r\n\r\nGameLogic.prototype.updatePlayer = function(){\r\n\r\n\tvar player = this.gameData.getEntity(\"player\", GameData.PLAYER);\r\n\r\n\tplayer.focus = this.commands.focus;\r\n\r\n\tvar speed = player.focus ? player.focusSpeed : player.neutralSpeed;\r\n\r\n\tplayer.vector.x = (!this.commands.left && !this.commands.right) ? 0 : this.commands.left ? -speed.x : speed.x;\r\n\tplayer.vector.y = (!this.commands.up   && !this.commands.down)  ? 0 : this.commands.up   ? -speed.y : speed.y;\r\n\r\n\tplayer.position = player.position.add(player.vector);\r\n\tthis.gameData.notifyUpdate(\"player\", GameData.PLAYER);\r\n\r\n\t//console.log(player.position.x, player.position.y, player.vector.x, player.vector.y, speed.x, speed.y);\r\n}\n},{}],5:[function(require,module,exports){\n(function (global){\n//Animyst = require(\"../../bin/animyst.js\");\r\nglobal.Main    = require('./main.js');\r\nglobal.Game \t= require('./game.js');\r\nglobal.GameLogic = require('./gamelogic.js');\r\nglobal.GameData = require('./gamedata.js');\r\nglobal.GameDisplay = require('./gamedisplay.js');\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./game.js\":1,\"./gamedata.js\":2,\"./gamedisplay.js\":3,\"./gamelogic.js\":4,\"./main.js\":6}],6:[function(require,module,exports){\nvar Main = function(){\n\tthis.game = null;\n\tthis.app  = null;\n}\n\nmodule.exports = Main;\n\nMain.prototype = {\n\n\tstart: function(){\n\t\tconsole.log(\"======= MAIN ======\");\n\n\t\tthis.app = new Animyst.Application();\n\n\t\tthis.app.initSignal.addOnce(this.onAppInit, this);\n\n\t\tthis.app.startup({});\n\n\t},\n\n\tonAppInit: function(){\n\t\tvar game = new Game(\"game1\");\n\t\tthis.app.run(game);\n\t}\n\n}\n\n\n},{}]},{},[5])\n\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var Game = function(id){\n\tAnimyst.AppState.call(this, id);\n\n\tthis.inputData = null;\n\tthis.gameData  = null;\n\tthis.viewport = null;\n}\n\nmodule.exports = Game;\nGame.prototype = Object.create(Animyst.AppState.prototype);\nGame.prototype.setup = function(){\n\tconsole.log(\"[Game] Setting Up...\");\n\tAnimyst.AppState.prototype.setup.call(this);\n\n\tthis.inputData = this.appScope.getDatabase(Animyst.CoreProcess.INPUT);\n\t\n\tvar scene = new THREE.Scene();\n\tthis.viewport = new Animyst.View3D(scene, Animyst.Window.width, Animyst.Window.height);\n\tthis.viewport.initDisplay({resize : true, debugControls : true, addAxis : true});\n\tthis.viewport.append();\n\t//this.gameData = new GameData();\n\n\t//var gameLogic   = new GameLogic(this.gameData, this.inputData);\n\t//var gameDisplay = new GameDisplay(this.gameData);\n\n\n\n\t\n\t//gameDisplay.startup({layer: this.appScope.getDatabase(Animyst.CoreProcess.PAPER_DISPLAY).getLayer(1)});\n\t//gameLogic.startup();\n\n\t//var threeDisplay = this.appScope.getDatabase(Animyst.CoreProcess.THREE_DISPLAY);\n\t//var sideScrollerWorld3d = new Animyst.SideScrollerWorld3D(threeDisplay);\n\n\t//sideScrollerWorld3d.startup({})\n\n\t//this.addSystem(\"world\", sideScrollerWorld3d);\n\n\t//this.addSystem(\"gameLogic\", gameLogic);\n\t//this.addSystem(\"gameDisplay\", gameDisplay)\n\t//this.addSystem(\"sound\", sound);\n\n}\n\nGame.prototype.start = function(){\n\tconsole.log(\"[Game] Start\");\n\tAnimyst.AppState.prototype.start.call(this);\n}\n\nGame.prototype.update = function(delta, time){\n\t//console.log(\"[Game] Updating...\", delta, time)\n\tAnimyst.AppState.prototype.update.call(this, delta, time);\n\n\tthis.viewport.render();\n}\n\nGame.prototype.pause = function(){\n\tAnimyst.AppState.prototype.pause.call(this);\n}\n\nGame.prototype.resume = function(){\n\tAnimyst.AppState.prototype.resume.call(this);\n}\n\nGame.prototype.kill = function(){\n\tAnimyst.AppState.prototype.kill.call(this);\n}\n\nGame.prototype.restart = function(){\n\tAnimyst.AppState.prototype.restart.call(this);\n}\n","var GameData = function () {\r\n\tAnimyst.Database.call(this);\r\n\r\n\tthis.entities            = {};\r\n\tthis.entities._total     = 0;\r\n\tthis.entityCreationCount = 0;\r\n\r\n\tthis.addedSignal   = new signals.Signal();\r\n\tthis.removedSignal = new signals.Signal();\r\n\tthis.updateSignal  = new signals.Signal();\r\n}\r\n\r\nmodule.exports = GameData;\r\n\r\nGameData.PLAYER = 0;\r\n\r\n\r\nGameData.ENTITY_ADDED   = 0; // Passes Entity\r\nGameData.ENTITY_REMOVED = 1; // Passes Removed Entity Data\r\nGameData.ENTITY_UPDATED = 2; // Passes Entity\r\n\r\nGameData.prototype = Object.create(Animyst.Database.prototype);\r\nGameData.prototype.clear = function(){\r\n\r\n\r\n\tAnimyst.Database.prototype.clear.call(this);\r\n}\r\n\r\nGameData.prototype.destroy = function(){\r\n\tthis.entities = null;\r\n\r\n\tAnimyst.Database.prototype.destroy.call(this);\r\n}\r\n\r\nGameData.prototype.addEntity = function(type, id, params){\r\n\tif(!this.entities[type]){\r\n\t\tthis.entities[type]       = {};\r\n\t\tthis.entities[type].count = 0;\r\n\t}\r\n\r\n\tvar entity = {};\r\n\r\n\tentity.id   = id || type + \"_\" + this.entities[type].count;\r\n\tentity.type = type;\r\n\r\n\tif(params){\r\n\t\tfor(var k in params){\r\n\t\t\tentity[k] = params[k];\r\n\t\t}\r\n\t}\r\n\r\n\tthis.entities[type][entity.id] = entity;\r\n\tthis.entities[type].count++;\r\n\r\n\tthis.entities._total++;\r\n\r\n\tthis.signal.dispatch(GameData.ENTITY_ADDED, entity);\r\n\tthis.addedSignal.dispatch(entity);\r\n\r\n\treturn entity\r\n\r\n}\r\n\r\n\r\nGameData.prototype.getEntity = function(id, type){\r\n\tif(!type){\r\n\t\tfor(var k in this.entities){\r\n\t\t\tvar list = this.entities[k];\r\n\t\t\tfor(var entityID in list){\r\n\t\t\t\tif(id == entityID){\r\n\t\t\t\t\ttype = k;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(type) break;\r\n\t\t}\r\n\t}\r\n\r\n\tif(!type || !this.entities[type][id])return;\r\n\r\n\treturn this.entities[type][id];\r\n}\r\n\r\nGameData.prototype.removeEntity = function(id, type){\r\n\tif(!type){\r\n\t\tfor(var k in this.entities){\r\n\t\t\tvar list = this.entities[k];\r\n\t\t\tfor(var entityID in list){\r\n\t\t\t\tif(id == entityID){\r\n\t\t\t\t\ttype = k;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(type) break;\r\n\t\t}\r\n\t}\r\n\r\n\tif(!type || !this.entities[type][id])return;\r\n\r\n\tthis.entities[type][id] = null;\r\n\tthis.entities[type].count--;\r\n\tthis.entities._total--\r\n\r\n\tdelete this.entities[type][id];\r\n\r\n\tvar data = {id:id, type:type}\r\n\tthis.signal.dispatch(GameData.ENTITY_REMOVED, data);\r\n\tthis.removedSignal.dispatch(data);\r\n}\r\n\r\n\r\nGameData.prototype.notifyUpdate = function(id, type){\r\n\tvar entity = this.getEntity(id, type);\r\n\tif(entity){\r\n\t\tthis.signal.dispatch(GameData.ENTITY_UPDATED, entity);\r\n\t\tthis.updateSignal.dispatch(entity)\r\n\t}\r\n}","var GameDisplay = function(gameData){\r\n\tAnimyst.System.call(this);\r\n\r\n\tthis.gameData = gameData;\r\n\tthis.layer    = null;\r\n\tthis.graphics = {};\r\n\r\n\tthis.graphicProperties = {}\r\n\tthis.graphicProperties[GameDisplay.PLAYER] = {}\r\n\tthis.graphicProperties[GameDisplay.ENEMY]  = {}\r\n}\r\n\r\nmodule.exports = GameDisplay;\r\n\r\nGameDisplay.PLAYER  = 0;\r\nGameDisplay.ENEMY01 = 1;\r\n\r\n\r\nGameDisplay.prototype = Object.create(Animyst.System.prototype);\r\nGameDisplay.prototype.startup = function(params){\r\n\r\n\tthis.gameData.signal.add(this.entityHandler, this);\r\n\r\n\tthis.layer = params.layer || new Layer({position: new Point()});\r\n\t\r\n\tAnimyst.System.prototype.startup.call(this, params);\r\n}\r\n\r\nGameDisplay.prototype.shutdown = function(){\r\n\tAnimyst.System.prototype.shutdown.call(this);\r\n}\r\n\r\nGameDisplay.prototype.update = function(delta, time){\r\n\tAnimyst.System.prototype.update.call(this);\r\n}\r\n\r\nGameDisplay.prototype.entityHandler = function(type, data){\r\n\tswitch(type){\r\n\t\tcase GameData.ENTITY_ADDED:\r\n\t\t\tvar graphic = this.createGraphic(this.graphicProperties[data.graphic]);\r\n\r\n\t\t\tgraphic.position = data.position.clone();\r\n\r\n\t\t\tthis.layer.addChild(graphic);\r\n\r\n\t\t\tthis.graphics[data.id] = graphic;\r\n\t\t\tbreak;\r\n\t\tcase GameData.ENTITY_UPDATED:\r\n\r\n\t\t\tvar graphic = this.getGraphicByID(data.id);\r\n\t\t\t\r\n\t\t\tgraphic.position.x = data.position.x;\r\n\t\t\tgraphic.position.y = data.position.y;\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase GameData.ENTITY_REMOVED:\r\n\t\t\tvar graphic = this.getGraphicByID(data.id);\r\n\r\n\t\t\tgraphic.remove();\r\n\t\t\tthis.graphics[data.id] = null;\r\n\t\t\tdelete this.graphics[data.id];\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nGameDisplay.prototype.createGraphic = function(prop){\r\n\treturn new Shape.Circle({radius:20, fillColor:\"#00FFFF\"});\r\n}\r\n\r\nGameDisplay.prototype.getGraphicByID = function(id){\r\n\treturn this.graphics[id];\r\n}","var GameLogic = function (gameData, inputData){\r\n\tAnimyst.System.call(this);\r\n\r\n\tthis.gameData  = gameData;\r\n\tthis.inputData = inputData;\r\n\tthis.screenDimensions = new Point();\r\n\r\n\tthis.commands = {\r\n\t\t\"up\"    : false,\r\n\t\t\"down\"  : false,\r\n\t\t\"left\"  : false,\r\n\t\t\"right\" : false,\r\n\t\t\"fire\"  : false,\r\n\t\t\"bomb\"  : false,\r\n\t\t\"focus\" : false\r\n\t}\r\n}\r\n\r\nmodule.exports = GameLogic;\r\nGameLogic.prototype = Object.create(Animyst.System.prototype);\r\nGameLogic.prototype.startup = function(params){\r\n\r\n\tAnimyst.System.prototype.startup.call(this);\r\n\r\n\tthis.screenDimensions.x = Animyst.Window.width;\r\n\tthis.screenDimensions.y = Animyst.Window.height;\r\n\r\n\tvar player = this.gameData.addEntity(GameData.PLAYER, \"player\", {\r\n\t\tvector:       new Point(), \r\n\t\tposition:     new Point(),\r\n\t\tneutralSpeed: new Point(10, 10),\r\n\t\tfocusSpeed:   new Point( 5,  5),\r\n\t\tfocus:        false,\r\n\r\n\t\tgraphic:      GameDisplay.PLAYER\r\n\t});\r\n\r\n\tplayer.position.x = this.screenDimensions.x / 2;\r\n\tplayer.position.y = this.screenDimensions.y / 2;\r\n\r\n\tconsole.log(this.screenDimensions);\r\n\tthis.gameData.notifyUpdate(\"player\", GameData.PLAYER);\r\n\r\n\tAnimyst.System.prototype.startup.call(this, params);\r\n}\r\n\r\nGameLogic.prototype.shutdown = function(){\r\n\r\n\tAnimyst.System.prototype.shutdown.call(this);\r\n}\r\n\r\nGameLogic.prototype.update = function(delta, time){\r\n\tthis.updateCommands();\r\n\tthis.updatePlayer();\r\n\r\n\tAnimyst.System.prototype.update.call(this);\r\n}\r\n\r\nGameLogic.prototype.updateCommands = function(){\r\n\r\n\tthis.commands.up    = this.inputData.isKeyDown(\"up\");\r\n\tthis.commands.down  = this.inputData.isKeyDown(\"down\");\r\n\tthis.commands.left  = this.inputData.isKeyDown(\"left\");\r\n\tthis.commands.right = this.inputData.isKeyDown(\"right\");\r\n\tthis.commands.fire  = this.inputData.isKeyDown(\"z\");\r\n\tthis.commands.focus = this.inputData.isKeyDown(\"shift\");\r\n}\r\n\r\nGameLogic.prototype.updatePlayer = function(){\r\n\r\n\tvar player = this.gameData.getEntity(\"player\", GameData.PLAYER);\r\n\r\n\tplayer.focus = this.commands.focus;\r\n\r\n\tvar speed = player.focus ? player.focusSpeed : player.neutralSpeed;\r\n\r\n\tplayer.vector.x = (!this.commands.left && !this.commands.right) ? 0 : this.commands.left ? -speed.x : speed.x;\r\n\tplayer.vector.y = (!this.commands.up   && !this.commands.down)  ? 0 : this.commands.up   ? -speed.y : speed.y;\r\n\r\n\tplayer.position = player.position.add(player.vector);\r\n\tthis.gameData.notifyUpdate(\"player\", GameData.PLAYER);\r\n\r\n\t//console.log(player.position.x, player.position.y, player.vector.x, player.vector.y, speed.x, speed.y);\r\n}","//Animyst = require(\"../../bin/animyst.js\");\r\nglobal.Main    = require('./main.js');\r\nglobal.Game \t= require('./game.js');\r\nglobal.GameLogic = require('./gamelogic.js');\r\nglobal.GameData = require('./gamedata.js');\r\nglobal.GameDisplay = require('./gamedisplay.js');","var Main = function(){\n\tthis.game = null;\n\tthis.app  = null;\n}\n\nmodule.exports = Main;\n\nMain.prototype = {\n\n\tstart: function(){\n\t\tconsole.log(\"======= MAIN ======\");\n\n\t\tthis.app = new Animyst.Application();\n\n\t\tthis.app.initSignal.addOnce(this.onAppInit, this);\n\n\t\tthis.app.startup({});\n\n\t},\n\n\tonAppInit: function(){\n\t\tvar game = new Game(\"game1\");\n\t\tthis.app.run(game);\n\t}\n\n}\n\n"],"sourceRoot":"/source/"}