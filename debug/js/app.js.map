{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app.js","src/_tests/src/_tests/game.js","src/_tests/gamedata.js","src/_tests/gamedisplay.js","src/_tests/gamelogic.js","src/_tests/src/_tests/index.js","src/_tests/main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","global","THREE","window","Game","id","Animyst","AppState","this","inputData","gameData","viewport","prototype","Object","create","setup","console","log","appScope","getDatabase","CoreProcess","INPUT","scene","Scene","View3D","Window","width","height","initDisplay","resize","debugControls","addAxis","append","texture","Texture","DataLoad","getAsset","needsUpdate","material","SpriteMaterial","map","sprite","Sprite","scale","set","image","add","SpriteSheetData","SpriteSheetAnimation","framerate","start","update","delta","time","render","pause","resume","kill","restart","self",2,"GameData","Database","entities","_total","entityCreationCount","addedSignal","signals","Signal","removedSignal","updateSignal","PLAYER","ENTITY_ADDED","ENTITY_REMOVED","ENTITY_UPDATED","clear","destroy","addEntity","type","params","count","entity","k","signal","dispatch","getEntity","list","entityID","removeEntity","data","notifyUpdate",3,"GameDisplay","System","layer","graphics","graphicProperties","ENEMY","ENEMY01","startup","entityHandler","Layer","position","Point","shutdown","graphic","createGraphic","clone","addChild","getGraphicByID","x","y","remove","prop","Shape","Circle","radius","fillColor",4,"GameLogic","screenDimensions","commands","up","down","left","right","fire","bomb","focus","player","vector","neutralSpeed","focusSpeed","updateCommands","updatePlayer","isKeyDown","speed",5,"Main","./game.js","./gamedata.js","./gamedisplay.js","./gamelogic.js","./main.js",6,"game","app","Application","initSignal","addOnce","onAppInit","run"],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar THREE = typeof window !== \"undefined\" ? window['THREE'] : typeof global !== \"undefined\" ? global['THREE'] : null;\nvar Game = function Game(id) {\n\tAnimyst.AppState.call(this, id);\n\n\tthis.inputData = null;\n\tthis.gameData = null;\n\tthis.viewport = null;\n};\n\nmodule.exports = Game;\nGame.prototype = Object.create(Animyst.AppState.prototype);\nGame.prototype.setup = function () {\n\tconsole.log(\"[Game] Setting Up...\");\n\tAnimyst.AppState.prototype.setup.call(this);\n\n\tthis.inputData = this.appScope.getDatabase(Animyst.CoreProcess.INPUT);\n\n\tvar scene = new THREE.Scene();\n\tthis.viewport = new Animyst.View3D(scene, Animyst.Window.width, Animyst.Window.height);\n\tthis.viewport.initDisplay({ resize: true, debugControls: true, addAxis: true });\n\tthis.viewport.append();\n\t//this.gameData = new GameData();\n\n\t//var gameLogic   = new GameLogic(this.gameData, this.inputData);\n\t//var gameDisplay = new GameDisplay(this.gameData);\n\n\tvar texture = new THREE.Texture(Animyst.DataLoad.getAsset('run_sheet'));\n\ttexture.needsUpdate = true;\n\tconsole.log(texture);\n\tvar material = new THREE.SpriteMaterial({ map: texture });\n\tvar sprite = new THREE.Sprite(material);\n\n\tsprite.scale.set(texture.image.width, texture.image.height, 1.0);\n\tscene.add(sprite);\n\n\tvar ssData = new Animyst.SpriteSheetData(\"run\", Animyst.DataLoad.getAsset('run_data'));\n\tvar anim = new Animyst.SpriteSheetAnimation('running', this.framerate);\n\t//console.log(ssData.getFrames('run'));\n\t//gameDisplay.startup({layer: this.appScope.getDatabase(Animyst.CoreProcess.PAPER_DISPLAY).getLayer(1)});\n\t//gameLogic.startup();\n\n\t//var threeDisplay = this.appScope.getDatabase(Animyst.CoreProcess.THREE_DISPLAY);\n\t//var sideScrollerWorld3d = new Animyst.SideScrollerWorld3D(threeDisplay);\n\n\t//sideScrollerWorld3d.startup({})\n\n\t//this.addSystem(\"world\", sideScrollerWorld3d);\n\n\t//this.addSystem(\"gameLogic\", gameLogic);\n\t//this.addSystem(\"gameDisplay\", gameDisplay)\n\t//this.addSystem(\"sound\", sound);\n};\n\nGame.prototype.start = function () {\n\tconsole.log(\"[Game] Start\");\n\tAnimyst.AppState.prototype.start.call(this);\n};\n\nGame.prototype.update = function (delta, time) {\n\t//console.log(\"[Game] Updating...\", delta, time)\n\tAnimyst.AppState.prototype.update.call(this, delta, time);\n\n\tthis.viewport.render();\n};\n\nGame.prototype.pause = function () {\n\tAnimyst.AppState.prototype.pause.call(this);\n};\n\nGame.prototype.resume = function () {\n\tAnimyst.AppState.prototype.resume.call(this);\n};\n\nGame.prototype.kill = function () {\n\tAnimyst.AppState.prototype.kill.call(this);\n};\n\nGame.prototype.restart = function () {\n\tAnimyst.AppState.prototype.restart.call(this);\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\nvar GameData = function GameData() {\n\tAnimyst.Database.call(this);\n\n\tthis.entities = {};\n\tthis.entities._total = 0;\n\tthis.entityCreationCount = 0;\n\n\tthis.addedSignal = new signals.Signal();\n\tthis.removedSignal = new signals.Signal();\n\tthis.updateSignal = new signals.Signal();\n};\n\nmodule.exports = GameData;\n\nGameData.PLAYER = 0;\n\nGameData.ENTITY_ADDED = 0; // Passes Entity\nGameData.ENTITY_REMOVED = 1; // Passes Removed Entity Data\nGameData.ENTITY_UPDATED = 2; // Passes Entity\n\nGameData.prototype = Object.create(Animyst.Database.prototype);\nGameData.prototype.clear = function () {\n\n\tAnimyst.Database.prototype.clear.call(this);\n};\n\nGameData.prototype.destroy = function () {\n\tthis.entities = null;\n\n\tAnimyst.Database.prototype.destroy.call(this);\n};\n\nGameData.prototype.addEntity = function (type, id, params) {\n\tif (!this.entities[type]) {\n\t\tthis.entities[type] = {};\n\t\tthis.entities[type].count = 0;\n\t}\n\n\tvar entity = {};\n\n\tentity.id = id || type + \"_\" + this.entities[type].count;\n\tentity.type = type;\n\n\tif (params) {\n\t\tfor (var k in params) {\n\t\t\tentity[k] = params[k];\n\t\t}\n\t}\n\n\tthis.entities[type][entity.id] = entity;\n\tthis.entities[type].count++;\n\n\tthis.entities._total++;\n\n\tthis.signal.dispatch(GameData.ENTITY_ADDED, entity);\n\tthis.addedSignal.dispatch(entity);\n\n\treturn entity;\n};\n\nGameData.prototype.getEntity = function (id, type) {\n\tif (!type) {\n\t\tfor (var k in this.entities) {\n\t\t\tvar list = this.entities[k];\n\t\t\tfor (var entityID in list) {\n\t\t\t\tif (id == entityID) {\n\t\t\t\t\ttype = k;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (type) break;\n\t\t}\n\t}\n\n\tif (!type || !this.entities[type][id]) return;\n\n\treturn this.entities[type][id];\n};\n\nGameData.prototype.removeEntity = function (id, type) {\n\tif (!type) {\n\t\tfor (var k in this.entities) {\n\t\t\tvar list = this.entities[k];\n\t\t\tfor (var entityID in list) {\n\t\t\t\tif (id == entityID) {\n\t\t\t\t\ttype = k;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (type) break;\n\t\t}\n\t}\n\n\tif (!type || !this.entities[type][id]) return;\n\n\tthis.entities[type][id] = null;\n\tthis.entities[type].count--;\n\tthis.entities._total--;\n\n\tdelete this.entities[type][id];\n\n\tvar data = { id: id, type: type };\n\tthis.signal.dispatch(GameData.ENTITY_REMOVED, data);\n\tthis.removedSignal.dispatch(data);\n};\n\nGameData.prototype.notifyUpdate = function (id, type) {\n\tvar entity = this.getEntity(id, type);\n\tif (entity) {\n\t\tthis.signal.dispatch(GameData.ENTITY_UPDATED, entity);\n\t\tthis.updateSignal.dispatch(entity);\n\t}\n};\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nvar GameDisplay = function GameDisplay(gameData) {\n\tAnimyst.System.call(this);\n\n\tthis.gameData = gameData;\n\tthis.layer = null;\n\tthis.graphics = {};\n\n\tthis.graphicProperties = {};\n\tthis.graphicProperties[GameDisplay.PLAYER] = {};\n\tthis.graphicProperties[GameDisplay.ENEMY] = {};\n};\n\nmodule.exports = GameDisplay;\n\nGameDisplay.PLAYER = 0;\nGameDisplay.ENEMY01 = 1;\n\nGameDisplay.prototype = Object.create(Animyst.System.prototype);\nGameDisplay.prototype.startup = function (params) {\n\n\tthis.gameData.signal.add(this.entityHandler, this);\n\n\tthis.layer = params.layer || new Layer({ position: new Point() });\n\n\tAnimyst.System.prototype.startup.call(this, params);\n};\n\nGameDisplay.prototype.shutdown = function () {\n\tAnimyst.System.prototype.shutdown.call(this);\n};\n\nGameDisplay.prototype.update = function (delta, time) {\n\tAnimyst.System.prototype.update.call(this);\n};\n\nGameDisplay.prototype.entityHandler = function (type, data) {\n\tswitch (type) {\n\t\tcase GameData.ENTITY_ADDED:\n\t\t\tvar graphic = this.createGraphic(this.graphicProperties[data.graphic]);\n\n\t\t\tgraphic.position = data.position.clone();\n\n\t\t\tthis.layer.addChild(graphic);\n\n\t\t\tthis.graphics[data.id] = graphic;\n\t\t\tbreak;\n\t\tcase GameData.ENTITY_UPDATED:\n\n\t\t\tvar graphic = this.getGraphicByID(data.id);\n\n\t\t\tgraphic.position.x = data.position.x;\n\t\t\tgraphic.position.y = data.position.y;\n\n\t\t\tbreak;\n\n\t\tcase GameData.ENTITY_REMOVED:\n\t\t\tvar graphic = this.getGraphicByID(data.id);\n\n\t\t\tgraphic.remove();\n\t\t\tthis.graphics[data.id] = null;\n\t\t\tdelete this.graphics[data.id];\n\t\t\tbreak;\n\t}\n};\n\nGameDisplay.prototype.createGraphic = function (prop) {\n\treturn new Shape.Circle({ radius: 20, fillColor: \"#00FFFF\" });\n};\n\nGameDisplay.prototype.getGraphicByID = function (id) {\n\treturn this.graphics[id];\n};\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nvar GameLogic = function GameLogic(gameData, inputData) {\n\tAnimyst.System.call(this);\n\n\tthis.gameData = gameData;\n\tthis.inputData = inputData;\n\tthis.screenDimensions = new Point();\n\n\tthis.commands = {\n\t\t\"up\": false,\n\t\t\"down\": false,\n\t\t\"left\": false,\n\t\t\"right\": false,\n\t\t\"fire\": false,\n\t\t\"bomb\": false,\n\t\t\"focus\": false\n\t};\n};\n\nmodule.exports = GameLogic;\nGameLogic.prototype = Object.create(Animyst.System.prototype);\nGameLogic.prototype.startup = function (params) {\n\n\tAnimyst.System.prototype.startup.call(this);\n\n\tthis.screenDimensions.x = Animyst.Window.width;\n\tthis.screenDimensions.y = Animyst.Window.height;\n\n\tvar player = this.gameData.addEntity(GameData.PLAYER, \"player\", {\n\t\tvector: new Point(),\n\t\tposition: new Point(),\n\t\tneutralSpeed: new Point(10, 10),\n\t\tfocusSpeed: new Point(5, 5),\n\t\tfocus: false,\n\n\t\tgraphic: GameDisplay.PLAYER\n\t});\n\n\tplayer.position.x = this.screenDimensions.x / 2;\n\tplayer.position.y = this.screenDimensions.y / 2;\n\n\tconsole.log(this.screenDimensions);\n\tthis.gameData.notifyUpdate(\"player\", GameData.PLAYER);\n\n\tAnimyst.System.prototype.startup.call(this, params);\n};\n\nGameLogic.prototype.shutdown = function () {\n\n\tAnimyst.System.prototype.shutdown.call(this);\n};\n\nGameLogic.prototype.update = function (delta, time) {\n\tthis.updateCommands();\n\tthis.updatePlayer();\n\n\tAnimyst.System.prototype.update.call(this);\n};\n\nGameLogic.prototype.updateCommands = function () {\n\n\tthis.commands.up = this.inputData.isKeyDown(\"up\");\n\tthis.commands.down = this.inputData.isKeyDown(\"down\");\n\tthis.commands.left = this.inputData.isKeyDown(\"left\");\n\tthis.commands.right = this.inputData.isKeyDown(\"right\");\n\tthis.commands.fire = this.inputData.isKeyDown(\"z\");\n\tthis.commands.focus = this.inputData.isKeyDown(\"shift\");\n};\n\nGameLogic.prototype.updatePlayer = function () {\n\n\tvar player = this.gameData.getEntity(\"player\", GameData.PLAYER);\n\n\tplayer.focus = this.commands.focus;\n\n\tvar speed = player.focus ? player.focusSpeed : player.neutralSpeed;\n\n\tplayer.vector.x = !this.commands.left && !this.commands.right ? 0 : this.commands.left ? -speed.x : speed.x;\n\tplayer.vector.y = !this.commands.up && !this.commands.down ? 0 : this.commands.up ? -speed.y : speed.y;\n\n\tplayer.position = player.position.add(player.vector);\n\tthis.gameData.notifyUpdate(\"player\", GameData.PLAYER);\n\n\t//console.log(player.position.x, player.position.y, player.vector.x, player.vector.y, speed.x, speed.y);\n};\n\n},{}],5:[function(require,module,exports){\n(function (global){\n'use strict';\n\n//Animyst = require(\"../../bin/animyst.js\");\nglobal.Main = require('./main.js');\nglobal.Game = require('./game.js');\nglobal.GameLogic = require('./gamelogic.js');\nglobal.GameData = require('./gamedata.js');\nglobal.GameDisplay = require('./gamedisplay.js');\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./game.js\":1,\"./gamedata.js\":2,\"./gamedisplay.js\":3,\"./gamelogic.js\":4,\"./main.js\":6}],6:[function(require,module,exports){\n\"use strict\";\n\nvar Main = function Main() {\n\tthis.game = null;\n\tthis.app = null;\n};\n\nmodule.exports = Main;\n\nMain.prototype = {\n\n\tstart: function start() {\n\t\tconsole.log(\"======= MAIN ======\");\n\n\t\tthis.app = new Animyst.Application();\n\n\t\tthis.app.initSignal.addOnce(this.onAppInit, this);\n\n\t\tthis.app.startup({});\n\t},\n\n\tonAppInit: function onAppInit() {\n\t\tvar game = new Game(\"game1\");\n\t\tthis.app.run(game);\n\t}\n\n};\n\n},{}]},{},[5])\n\n","\nvar THREE = (typeof window !== \"undefined\" ? window['THREE'] : typeof global !== \"undefined\" ? global['THREE'] : null);\nvar Game = function(id){\n\tAnimyst.AppState.call(this, id);\n\n\tthis.inputData = null;\n\tthis.gameData  = null;\n\tthis.viewport = null;\n}\n\nmodule.exports = Game;\nGame.prototype = Object.create(Animyst.AppState.prototype);\nGame.prototype.setup = function(){\n\tconsole.log(\"[Game] Setting Up...\");\n\tAnimyst.AppState.prototype.setup.call(this);\n\n\tthis.inputData = this.appScope.getDatabase(Animyst.CoreProcess.INPUT);\n\t\n\tvar scene = new THREE.Scene();\n\tthis.viewport = new Animyst.View3D(scene, Animyst.Window.width, Animyst.Window.height);\n\tthis.viewport.initDisplay({resize : true, debugControls : true, addAxis : true});\n\tthis.viewport.append();\n\t//this.gameData = new GameData();\n\n\t//var gameLogic   = new GameLogic(this.gameData, this.inputData);\n\t//var gameDisplay = new GameDisplay(this.gameData);\n\n\n\tlet texture = new THREE.Texture(Animyst.DataLoad.getAsset('run_sheet'));\n\ttexture.needsUpdate = true;\n\tconsole.log(texture)\n\tlet material = new THREE.SpriteMaterial({map:texture});\n\tlet sprite = new THREE.Sprite( material );\n\n\tsprite.scale.set(texture.image.width,texture.image.height,1.0);\n\tscene.add(sprite);\n\n\tvar ssData = new Animyst.SpriteSheetData(\"run\", Animyst.DataLoad.getAsset('run_data'))\n\tvar anim = new Animyst.SpriteSheetAnimation('running', this.framerate);\n\t//console.log(ssData.getFrames('run'));\n\t//gameDisplay.startup({layer: this.appScope.getDatabase(Animyst.CoreProcess.PAPER_DISPLAY).getLayer(1)});\n\t//gameLogic.startup();\n\n\t//var threeDisplay = this.appScope.getDatabase(Animyst.CoreProcess.THREE_DISPLAY);\n\t//var sideScrollerWorld3d = new Animyst.SideScrollerWorld3D(threeDisplay);\n\n\t//sideScrollerWorld3d.startup({})\n\n\t//this.addSystem(\"world\", sideScrollerWorld3d);\n\n\t//this.addSystem(\"gameLogic\", gameLogic);\n\t//this.addSystem(\"gameDisplay\", gameDisplay)\n\t//this.addSystem(\"sound\", sound);\n\n}\n\nGame.prototype.start = function(){\n\tconsole.log(\"[Game] Start\");\n\tAnimyst.AppState.prototype.start.call(this);\n}\n\nGame.prototype.update = function(delta, time){\n\t//console.log(\"[Game] Updating...\", delta, time)\n\tAnimyst.AppState.prototype.update.call(this, delta, time);\n\n\tthis.viewport.render();\n}\n\nGame.prototype.pause = function(){\n\tAnimyst.AppState.prototype.pause.call(this);\n}\n\nGame.prototype.resume = function(){\n\tAnimyst.AppState.prototype.resume.call(this);\n}\n\nGame.prototype.kill = function(){\n\tAnimyst.AppState.prototype.kill.call(this);\n}\n\nGame.prototype.restart = function(){\n\tAnimyst.AppState.prototype.restart.call(this);\n}\n","var GameData = function () {\r\n\tAnimyst.Database.call(this);\r\n\r\n\tthis.entities            = {};\r\n\tthis.entities._total     = 0;\r\n\tthis.entityCreationCount = 0;\r\n\r\n\tthis.addedSignal   = new signals.Signal();\r\n\tthis.removedSignal = new signals.Signal();\r\n\tthis.updateSignal  = new signals.Signal();\r\n}\r\n\r\nmodule.exports = GameData;\r\n\r\nGameData.PLAYER = 0;\r\n\r\n\r\nGameData.ENTITY_ADDED   = 0; // Passes Entity\r\nGameData.ENTITY_REMOVED = 1; // Passes Removed Entity Data\r\nGameData.ENTITY_UPDATED = 2; // Passes Entity\r\n\r\nGameData.prototype = Object.create(Animyst.Database.prototype);\r\nGameData.prototype.clear = function(){\r\n\r\n\r\n\tAnimyst.Database.prototype.clear.call(this);\r\n}\r\n\r\nGameData.prototype.destroy = function(){\r\n\tthis.entities = null;\r\n\r\n\tAnimyst.Database.prototype.destroy.call(this);\r\n}\r\n\r\nGameData.prototype.addEntity = function(type, id, params){\r\n\tif(!this.entities[type]){\r\n\t\tthis.entities[type]       = {};\r\n\t\tthis.entities[type].count = 0;\r\n\t}\r\n\r\n\tvar entity = {};\r\n\r\n\tentity.id   = id || type + \"_\" + this.entities[type].count;\r\n\tentity.type = type;\r\n\r\n\tif(params){\r\n\t\tfor(var k in params){\r\n\t\t\tentity[k] = params[k];\r\n\t\t}\r\n\t}\r\n\r\n\tthis.entities[type][entity.id] = entity;\r\n\tthis.entities[type].count++;\r\n\r\n\tthis.entities._total++;\r\n\r\n\tthis.signal.dispatch(GameData.ENTITY_ADDED, entity);\r\n\tthis.addedSignal.dispatch(entity);\r\n\r\n\treturn entity\r\n\r\n}\r\n\r\n\r\nGameData.prototype.getEntity = function(id, type){\r\n\tif(!type){\r\n\t\tfor(var k in this.entities){\r\n\t\t\tvar list = this.entities[k];\r\n\t\t\tfor(var entityID in list){\r\n\t\t\t\tif(id == entityID){\r\n\t\t\t\t\ttype = k;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(type) break;\r\n\t\t}\r\n\t}\r\n\r\n\tif(!type || !this.entities[type][id])return;\r\n\r\n\treturn this.entities[type][id];\r\n}\r\n\r\nGameData.prototype.removeEntity = function(id, type){\r\n\tif(!type){\r\n\t\tfor(var k in this.entities){\r\n\t\t\tvar list = this.entities[k];\r\n\t\t\tfor(var entityID in list){\r\n\t\t\t\tif(id == entityID){\r\n\t\t\t\t\ttype = k;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(type) break;\r\n\t\t}\r\n\t}\r\n\r\n\tif(!type || !this.entities[type][id])return;\r\n\r\n\tthis.entities[type][id] = null;\r\n\tthis.entities[type].count--;\r\n\tthis.entities._total--\r\n\r\n\tdelete this.entities[type][id];\r\n\r\n\tvar data = {id:id, type:type}\r\n\tthis.signal.dispatch(GameData.ENTITY_REMOVED, data);\r\n\tthis.removedSignal.dispatch(data);\r\n}\r\n\r\n\r\nGameData.prototype.notifyUpdate = function(id, type){\r\n\tvar entity = this.getEntity(id, type);\r\n\tif(entity){\r\n\t\tthis.signal.dispatch(GameData.ENTITY_UPDATED, entity);\r\n\t\tthis.updateSignal.dispatch(entity)\r\n\t}\r\n}","var GameDisplay = function(gameData){\r\n\tAnimyst.System.call(this);\r\n\r\n\tthis.gameData = gameData;\r\n\tthis.layer    = null;\r\n\tthis.graphics = {};\r\n\r\n\tthis.graphicProperties = {}\r\n\tthis.graphicProperties[GameDisplay.PLAYER] = {}\r\n\tthis.graphicProperties[GameDisplay.ENEMY]  = {}\r\n}\r\n\r\nmodule.exports = GameDisplay;\r\n\r\nGameDisplay.PLAYER  = 0;\r\nGameDisplay.ENEMY01 = 1;\r\n\r\n\r\nGameDisplay.prototype = Object.create(Animyst.System.prototype);\r\nGameDisplay.prototype.startup = function(params){\r\n\r\n\tthis.gameData.signal.add(this.entityHandler, this);\r\n\r\n\tthis.layer = params.layer || new Layer({position: new Point()});\r\n\t\r\n\tAnimyst.System.prototype.startup.call(this, params);\r\n}\r\n\r\nGameDisplay.prototype.shutdown = function(){\r\n\tAnimyst.System.prototype.shutdown.call(this);\r\n}\r\n\r\nGameDisplay.prototype.update = function(delta, time){\r\n\tAnimyst.System.prototype.update.call(this);\r\n}\r\n\r\nGameDisplay.prototype.entityHandler = function(type, data){\r\n\tswitch(type){\r\n\t\tcase GameData.ENTITY_ADDED:\r\n\t\t\tvar graphic = this.createGraphic(this.graphicProperties[data.graphic]);\r\n\r\n\t\t\tgraphic.position = data.position.clone();\r\n\r\n\t\t\tthis.layer.addChild(graphic);\r\n\r\n\t\t\tthis.graphics[data.id] = graphic;\r\n\t\t\tbreak;\r\n\t\tcase GameData.ENTITY_UPDATED:\r\n\r\n\t\t\tvar graphic = this.getGraphicByID(data.id);\r\n\t\t\t\r\n\t\t\tgraphic.position.x = data.position.x;\r\n\t\t\tgraphic.position.y = data.position.y;\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase GameData.ENTITY_REMOVED:\r\n\t\t\tvar graphic = this.getGraphicByID(data.id);\r\n\r\n\t\t\tgraphic.remove();\r\n\t\t\tthis.graphics[data.id] = null;\r\n\t\t\tdelete this.graphics[data.id];\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nGameDisplay.prototype.createGraphic = function(prop){\r\n\treturn new Shape.Circle({radius:20, fillColor:\"#00FFFF\"});\r\n}\r\n\r\nGameDisplay.prototype.getGraphicByID = function(id){\r\n\treturn this.graphics[id];\r\n}","var GameLogic = function (gameData, inputData){\r\n\tAnimyst.System.call(this);\r\n\r\n\tthis.gameData  = gameData;\r\n\tthis.inputData = inputData;\r\n\tthis.screenDimensions = new Point();\r\n\r\n\tthis.commands = {\r\n\t\t\"up\"    : false,\r\n\t\t\"down\"  : false,\r\n\t\t\"left\"  : false,\r\n\t\t\"right\" : false,\r\n\t\t\"fire\"  : false,\r\n\t\t\"bomb\"  : false,\r\n\t\t\"focus\" : false\r\n\t}\r\n}\r\n\r\nmodule.exports = GameLogic;\r\nGameLogic.prototype = Object.create(Animyst.System.prototype);\r\nGameLogic.prototype.startup = function(params){\r\n\r\n\tAnimyst.System.prototype.startup.call(this);\r\n\r\n\tthis.screenDimensions.x = Animyst.Window.width;\r\n\tthis.screenDimensions.y = Animyst.Window.height;\r\n\r\n\tvar player = this.gameData.addEntity(GameData.PLAYER, \"player\", {\r\n\t\tvector:       new Point(), \r\n\t\tposition:     new Point(),\r\n\t\tneutralSpeed: new Point(10, 10),\r\n\t\tfocusSpeed:   new Point( 5,  5),\r\n\t\tfocus:        false,\r\n\r\n\t\tgraphic:      GameDisplay.PLAYER\r\n\t});\r\n\r\n\tplayer.position.x = this.screenDimensions.x / 2;\r\n\tplayer.position.y = this.screenDimensions.y / 2;\r\n\r\n\tconsole.log(this.screenDimensions);\r\n\tthis.gameData.notifyUpdate(\"player\", GameData.PLAYER);\r\n\r\n\tAnimyst.System.prototype.startup.call(this, params);\r\n}\r\n\r\nGameLogic.prototype.shutdown = function(){\r\n\r\n\tAnimyst.System.prototype.shutdown.call(this);\r\n}\r\n\r\nGameLogic.prototype.update = function(delta, time){\r\n\tthis.updateCommands();\r\n\tthis.updatePlayer();\r\n\r\n\tAnimyst.System.prototype.update.call(this);\r\n}\r\n\r\nGameLogic.prototype.updateCommands = function(){\r\n\r\n\tthis.commands.up    = this.inputData.isKeyDown(\"up\");\r\n\tthis.commands.down  = this.inputData.isKeyDown(\"down\");\r\n\tthis.commands.left  = this.inputData.isKeyDown(\"left\");\r\n\tthis.commands.right = this.inputData.isKeyDown(\"right\");\r\n\tthis.commands.fire  = this.inputData.isKeyDown(\"z\");\r\n\tthis.commands.focus = this.inputData.isKeyDown(\"shift\");\r\n}\r\n\r\nGameLogic.prototype.updatePlayer = function(){\r\n\r\n\tvar player = this.gameData.getEntity(\"player\", GameData.PLAYER);\r\n\r\n\tplayer.focus = this.commands.focus;\r\n\r\n\tvar speed = player.focus ? player.focusSpeed : player.neutralSpeed;\r\n\r\n\tplayer.vector.x = (!this.commands.left && !this.commands.right) ? 0 : this.commands.left ? -speed.x : speed.x;\r\n\tplayer.vector.y = (!this.commands.up   && !this.commands.down)  ? 0 : this.commands.up   ? -speed.y : speed.y;\r\n\r\n\tplayer.position = player.position.add(player.vector);\r\n\tthis.gameData.notifyUpdate(\"player\", GameData.PLAYER);\r\n\r\n\t//console.log(player.position.x, player.position.y, player.vector.x, player.vector.y, speed.x, speed.y);\r\n}","//Animyst = require(\"../../bin/animyst.js\");\r\nglobal.Main    = require('./main.js');\r\nglobal.Game \t= require('./game.js');\r\nglobal.GameLogic = require('./gamelogic.js');\r\nglobal.GameData = require('./gamedata.js');\r\nglobal.GameDisplay = require('./gamedisplay.js');","var Main = function(){\n\tthis.game = null;\n\tthis.app  = null;\n}\n\nmodule.exports = Main;\n\nMain.prototype = {\n\n\tstart: function(){\n\t\tconsole.log(\"======= MAIN ======\");\n\n\t\tthis.app = new Animyst.Application();\n\n\t\tthis.app.initSignal.addOnce(this.onAppInit, this);\n\n\t\tthis.app.startup({});\n\n\t},\n\n\tonAppInit: function(){\n\t\tvar game = new Game(\"game1\");\n\t\tthis.app.run(game);\n\t}\n\n}\n\n"],"sourceRoot":"/source/"}